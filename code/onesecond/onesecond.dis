
onesecond:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2eb>
 248:	78 38                	js     282 <_init-0x2de>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 2a                	add    %ch,(%rdx)
 285:	1e                   	(bad)  
 286:	98                   	cwtl   
 287:	d0 4f c2             	rorb   -0x3e(%rdi)
 28a:	52                   	push   %rdx
 28b:	99                   	cltd   
 28c:	d4                   	(bad)  
 28d:	52                   	push   %rdx
 28e:	fd                   	std    
 28f:	13 54 d6 1c          	adc    0x1c(%rsi,%rdx,8),%edx
 293:	91                   	xchg   %eax,%ecx
 294:	2a f2                	sub    %dl,%dh
 296:	dd                   	.byte 0xdd
 297:	b8                   	.byte 0xb8

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	4b 00 00             	rex.WXB add %al,(%r8)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 10                	add    %dl,(%rax)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 2d 00 00 00 12    	add    %ch,0x12000000(%rip)        # 12000305 <_end+0x11dff2ed>
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 67 00             	add    %ah,0x0(%rdi)
 31a:	00 00                	add    %al,(%rax)
 31c:	20 00                	and    %al,(%rax)
	...
 32e:	00 00                	add    %al,(%rax)
 330:	17                   	(bad)  
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 76 00             	add    %dh,0x0(%rsi)
 34a:	00 00                	add    %al,(%rax)
 34c:	20 00                	and    %al,(%rax)
	...
 35e:	00 00                	add    %al,(%rax)
 360:	1e                   	(bad)  
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 0b                	add    %cl,(%rbx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000390 <.dynstr>:
 390:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 394:	63 2e                	movslq (%rsi),%ebp
 396:	73 6f                	jae    407 <_init-0x159>
 398:	2e 36 00 66 6f       	cs add %ah,%ss:0x6f(%rsi)
 39d:	72 6b                	jb     40a <_init-0x156>
 39f:	00 6d 65             	add    %ch,0x65(%rbp)
 3a2:	6d                   	insl   (%dx),%es:(%rdi)
 3a3:	73 65                	jae    40a <_init-0x156>
 3a5:	74 00                	je     3a7 <_init-0x1b9>
 3a7:	6d                   	insl   (%dx),%es:(%rdi)
 3a8:	61                   	(bad)  
 3a9:	6c                   	insb   (%dx),%es:(%rdi)
 3aa:	6c                   	insb   (%dx),%es:(%rdi)
 3ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ac:	63 00                	movslq (%rax),%eax
 3ae:	5f                   	pop    %rdi
 3af:	5f                   	pop    %rdi
 3b0:	63 78 61             	movslq 0x61(%rax),%edi
 3b3:	5f                   	pop    %rdi
 3b4:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3ba:	7a 65                	jp     421 <_init-0x13f>
 3bc:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3bf:	6c                   	insb   (%dx),%es:(%rdi)
 3c0:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3c7:	72 74                	jb     43d <_init-0x123>
 3c9:	5f                   	pop    %rdi
 3ca:	6d                   	insl   (%dx),%es:(%rdi)
 3cb:	61                   	(bad)  
 3cc:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3d3:	43 5f                	rex.XB pop %r15
 3d5:	32 2e                	xor    (%rsi),%ch
 3d7:	32 2e                	xor    (%rsi),%ch
 3d9:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3de:	4d 5f                	rex.WRB pop %r15
 3e0:	64 65 72 65          	fs gs jb 449 <_init-0x117>
 3e4:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3eb:	4d 
 3ec:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ef:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f0:	65 54                	gs push %rsp
 3f2:	61                   	(bad)  
 3f3:	62                   	(bad)  
 3f4:	6c                   	insb   (%dx),%es:(%rdi)
 3f5:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3f9:	67 6d                	insl   (%dx),%es:(%edi)
 3fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 3fc:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fd:	5f                   	pop    %rdi
 3fe:	73 74                	jae    474 <_init-0xec>
 400:	61                   	(bad)  
 401:	72 74                	jb     477 <_init-0xe9>
 403:	5f                   	pop    %rdi
 404:	5f                   	pop    %rdi
 405:	00 5f 49             	add    %bl,0x49(%rdi)
 408:	54                   	push   %rsp
 409:	4d 5f                	rex.WRB pop %r15
 40b:	72 65                	jb     472 <_init-0xee>
 40d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 414:	4d 
 415:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 417:	6f                   	outsl  %ds:(%rsi),(%dx)
 418:	6e                   	outsb  %ds:(%rsi),(%dx)
 419:	65 54                	gs push %rsp
 41b:	61                   	(bad)  
 41c:	62                   	.byte 0x62
 41d:	6c                   	insb   (%dx),%es:(%rdi)
 41e:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000420 <.gnu.version>:
 420:	00 00                	add    %al,(%rax)
 422:	00 00                	add    %al,(%rax)
 424:	02 00                	add    (%rax),%al
 426:	02 00                	add    (%rax),%al
 428:	00 00                	add    %al,(%rax)
 42a:	02 00                	add    (%rax),%al
 42c:	00 00                	add    %al,(%rax)
 42e:	02 00                	add    (%rax),%al
 430:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000438 <.gnu.version_r>:
 438:	01 00                	add    %eax,(%rax)
 43a:	01 00                	add    %eax,(%rax)
 43c:	01 00                	add    %eax,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	10 00                	adc    %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	75 1a                	jne    464 <_init-0xfc>
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	3f                   	(bad)  
 451:	00 00                	add    %al,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	a8 0d                	test   $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	d0 06                	rolb   (%rsi)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	b0 0d                	mov    $0xd,%al
 472:	20 00                	and    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	90                   	nop
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 01                	add    %al,(%rcx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 03                	add    %al,(%rbx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 e8                	add    %ch,%al
 4d1:	0f 20 00             	mov    %cr0,%rax
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	06                   	(bad)  
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	f0 0f 20 00          	lock mov %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 06                	add    %al,(%rsi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c0 0f 20             	rorb   $0x20,(%rdi)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 07                	add    %al,(%rdi)
 521:	00 00                	add    %al,(%rax)
 523:	00 02                	add    %al,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 c8                	add    %cl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 541 <_init-0x1f>
 541:	00 00                	add    %al,(%rax)
 543:	00 00                	add    %al,(%rax)
 545:	00 00                	add    %al,(%rax)
 547:	00 d0                	add    %dl,%al
 549:	0f 20 00             	mov    %cr0,%rax
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	07                   	(bad)  
 551:	00 00                	add    %al,(%rax)
 553:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .init:

0000000000000560 <_init>:
 560:	48 83 ec 08          	sub    $0x8,%rsp
 564:	48 8b 05 7d 0a 20 00 	mov    0x200a7d(%rip),%rax        # 200fe8 <__gmon_start__>
 56b:	48 85 c0             	test   %rax,%rax
 56e:	74 02                	je     572 <_init+0x12>
 570:	ff d0                	callq  *%rax
 572:	48 83 c4 08          	add    $0x8,%rsp
 576:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 2a 0a 20 00    	pushq  0x200a2a(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 2c 0a 20 00    	jmpq   *0x200a2c(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <memset@plt>:
 590:	ff 25 2a 0a 20 00    	jmpq   *0x200a2a(%rip)        # 200fc0 <memset@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <malloc@plt>:
 5a0:	ff 25 22 0a 20 00    	jmpq   *0x200a22(%rip)        # 200fc8 <malloc@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

00000000000005b0 <fork@plt>:
 5b0:	ff 25 1a 0a 20 00    	jmpq   *0x200a1a(%rip)        # 200fd0 <fork@GLIBC_2.2.5>
 5b6:	68 02 00 00 00       	pushq  $0x2
 5bb:	e9 c0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005c0 <__cxa_finalize@plt>:
 5c0:	ff 25 32 0a 20 00    	jmpq   *0x200a32(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005d0 <_start>:
 5d0:	31 ed                	xor    %ebp,%ebp
 5d2:	49 89 d1             	mov    %rdx,%r9
 5d5:	5e                   	pop    %rsi
 5d6:	48 89 e2             	mov    %rsp,%rdx
 5d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5dd:	50                   	push   %rax
 5de:	54                   	push   %rsp
 5df:	4c 8d 05 ca 01 00 00 	lea    0x1ca(%rip),%r8        # 7b0 <__libc_csu_fini>
 5e6:	48 8d 0d 53 01 00 00 	lea    0x153(%rip),%rcx        # 740 <__libc_csu_init>
 5ed:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6da <main>
 5f4:	ff 15 e6 09 20 00    	callq  *0x2009e6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5fa:	f4                   	hlt    
 5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000600 <deregister_tm_clones>:
 600:	48 8d 3d 09 0a 20 00 	lea    0x200a09(%rip),%rdi        # 201010 <__TMC_END__>
 607:	55                   	push   %rbp
 608:	48 8d 05 01 0a 20 00 	lea    0x200a01(%rip),%rax        # 201010 <__TMC_END__>
 60f:	48 39 f8             	cmp    %rdi,%rax
 612:	48 89 e5             	mov    %rsp,%rbp
 615:	74 19                	je     630 <deregister_tm_clones+0x30>
 617:	48 8b 05 ba 09 20 00 	mov    0x2009ba(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 61e:	48 85 c0             	test   %rax,%rax
 621:	74 0d                	je     630 <deregister_tm_clones+0x30>
 623:	5d                   	pop    %rbp
 624:	ff e0                	jmpq   *%rax
 626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 62d:	00 00 00 
 630:	5d                   	pop    %rbp
 631:	c3                   	retq   
 632:	0f 1f 40 00          	nopl   0x0(%rax)
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 

0000000000000640 <register_tm_clones>:
 640:	48 8d 3d c9 09 20 00 	lea    0x2009c9(%rip),%rdi        # 201010 <__TMC_END__>
 647:	48 8d 35 c2 09 20 00 	lea    0x2009c2(%rip),%rsi        # 201010 <__TMC_END__>
 64e:	55                   	push   %rbp
 64f:	48 29 fe             	sub    %rdi,%rsi
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	48 c1 fe 03          	sar    $0x3,%rsi
 659:	48 89 f0             	mov    %rsi,%rax
 65c:	48 c1 e8 3f          	shr    $0x3f,%rax
 660:	48 01 c6             	add    %rax,%rsi
 663:	48 d1 fe             	sar    %rsi
 666:	74 18                	je     680 <register_tm_clones+0x40>
 668:	48 8b 05 81 09 20 00 	mov    0x200981(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 66f:	48 85 c0             	test   %rax,%rax
 672:	74 0c                	je     680 <register_tm_clones+0x40>
 674:	5d                   	pop    %rbp
 675:	ff e0                	jmpq   *%rax
 677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 67e:	00 00 
 680:	5d                   	pop    %rbp
 681:	c3                   	retq   
 682:	0f 1f 40 00          	nopl   0x0(%rax)
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 

0000000000000690 <__do_global_dtors_aux>:
 690:	80 3d 79 09 20 00 00 	cmpb   $0x0,0x200979(%rip)        # 201010 <__TMC_END__>
 697:	75 2f                	jne    6c8 <__do_global_dtors_aux+0x38>
 699:	48 83 3d 57 09 20 00 	cmpq   $0x0,0x200957(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6a0:	00 
 6a1:	55                   	push   %rbp
 6a2:	48 89 e5             	mov    %rsp,%rbp
 6a5:	74 0c                	je     6b3 <__do_global_dtors_aux+0x23>
 6a7:	48 8b 3d 5a 09 20 00 	mov    0x20095a(%rip),%rdi        # 201008 <__dso_handle>
 6ae:	e8 0d ff ff ff       	callq  5c0 <__cxa_finalize@plt>
 6b3:	e8 48 ff ff ff       	callq  600 <deregister_tm_clones>
 6b8:	c6 05 51 09 20 00 01 	movb   $0x1,0x200951(%rip)        # 201010 <__TMC_END__>
 6bf:	5d                   	pop    %rbp
 6c0:	c3                   	retq   
 6c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6c8:	f3 c3                	repz retq 
 6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006d0 <frame_dummy>:
 6d0:	55                   	push   %rbp
 6d1:	48 89 e5             	mov    %rsp,%rbp
 6d4:	5d                   	pop    %rbp
 6d5:	e9 66 ff ff ff       	jmpq   640 <register_tm_clones>

00000000000006da <main>:
 6da:	55                   	push   %rbp
 6db:	48 89 e5             	mov    %rsp,%rbp
 6de:	48 83 ec 20          	sub    $0x20,%rsp
 6e2:	e8 c9 fe ff ff       	callq  5b0 <fork@plt>
 6e7:	89 45 ec             	mov    %eax,-0x14(%rbp)
 6ea:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
 6ee:	79 07                	jns    6f7 <main+0x1d>
 6f0:	b8 01 00 00 00       	mov    $0x1,%eax
 6f5:	eb 45                	jmp    73c <main+0x62>
 6f7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
 6fb:	74 02                	je     6ff <main+0x25>
 6fd:	eb e3                	jmp    6e2 <main+0x8>
 6ff:	90                   	nop
 700:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 707:	48 c7 45 f0 00 00 40 	movq   $0x400000,-0x10(%rbp)
 70e:	00 
 70f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 713:	48 89 c7             	mov    %rax,%rdi
 716:	e8 85 fe ff ff       	callq  5a0 <malloc@plt>
 71b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 71f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 723:	8b 45 e8             	mov    -0x18(%rbp),%eax
 726:	8d 48 01             	lea    0x1(%rax),%ecx
 729:	89 4d e8             	mov    %ecx,-0x18(%rbp)
 72c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 730:	89 c6                	mov    %eax,%esi
 732:	48 89 cf             	mov    %rcx,%rdi
 735:	e8 56 fe ff ff       	callq  590 <memset@plt>
 73a:	eb cb                	jmp    707 <main+0x2d>
 73c:	c9                   	leaveq 
 73d:	c3                   	retq   
 73e:	66 90                	xchg   %ax,%ax

0000000000000740 <__libc_csu_init>:
 740:	41 57                	push   %r15
 742:	41 56                	push   %r14
 744:	49 89 d7             	mov    %rdx,%r15
 747:	41 55                	push   %r13
 749:	41 54                	push   %r12
 74b:	4c 8d 25 56 06 20 00 	lea    0x200656(%rip),%r12        # 200da8 <__frame_dummy_init_array_entry>
 752:	55                   	push   %rbp
 753:	48 8d 2d 56 06 20 00 	lea    0x200656(%rip),%rbp        # 200db0 <__init_array_end>
 75a:	53                   	push   %rbx
 75b:	41 89 fd             	mov    %edi,%r13d
 75e:	49 89 f6             	mov    %rsi,%r14
 761:	4c 29 e5             	sub    %r12,%rbp
 764:	48 83 ec 08          	sub    $0x8,%rsp
 768:	48 c1 fd 03          	sar    $0x3,%rbp
 76c:	e8 ef fd ff ff       	callq  560 <_init>
 771:	48 85 ed             	test   %rbp,%rbp
 774:	74 20                	je     796 <__libc_csu_init+0x56>
 776:	31 db                	xor    %ebx,%ebx
 778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 77f:	00 
 780:	4c 89 fa             	mov    %r15,%rdx
 783:	4c 89 f6             	mov    %r14,%rsi
 786:	44 89 ef             	mov    %r13d,%edi
 789:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 78d:	48 83 c3 01          	add    $0x1,%rbx
 791:	48 39 dd             	cmp    %rbx,%rbp
 794:	75 ea                	jne    780 <__libc_csu_init+0x40>
 796:	48 83 c4 08          	add    $0x8,%rsp
 79a:	5b                   	pop    %rbx
 79b:	5d                   	pop    %rbp
 79c:	41 5c                	pop    %r12
 79e:	41 5d                	pop    %r13
 7a0:	41 5e                	pop    %r14
 7a2:	41 5f                	pop    %r15
 7a4:	c3                   	retq   
 7a5:	90                   	nop
 7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7ad:	00 00 00 

00000000000007b0 <__libc_csu_fini>:
 7b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000007b4 <_fini>:
 7b4:	48 83 ec 08          	sub    $0x8,%rsp
 7b8:	48 83 c4 08          	add    $0x8,%rsp
 7bc:	c3                   	retq   

Disassembly of section .rodata:

00000000000007c0 <_IO_stdin_used>:
 7c0:	01 00                	add    %eax,(%rax)
 7c2:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

00000000000007c4 <__GNU_EH_FRAME_HDR>:
 7c4:	01 1b                	add    %ebx,(%rbx)
 7c6:	03 3b                	add    (%rbx),%edi
 7c8:	38 00                	cmp    %al,(%rax)
 7ca:	00 00                	add    %al,(%rax)
 7cc:	06                   	(bad)  
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 bc fd ff ff 84 00 	add    %bh,0x84ffff(%rbp,%rdi,8)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	fc                   	cld    
 7d9:	fd                   	std    
 7da:	ff                   	(bad)  
 7db:	ff ac 00 00 00 0c fe 	ljmp   *-0x1f40000(%rax,%rax,1)
 7e2:	ff                   	(bad)  
 7e3:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
 7e7:	00 16                	add    %dl,(%rsi)
 7e9:	ff                   	(bad)  
 7ea:	ff                   	(bad)  
 7eb:	ff c4                	inc    %esp
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 7c ff ff          	add    %bh,-0x1(%rdi,%rdi,8)
 7f3:	ff e4                	jmpq   *%rsp
 7f5:	00 00                	add    %al,(%rax)
 7f7:	00 ec                	add    %ch,%ah
 7f9:	ff                   	(bad)  
 7fa:	ff                   	(bad)  
 7fb:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000000800 <__FRAME_END__-0x104>:
 800:	14 00                	adc    $0x0,%al
 802:	00 00                	add    %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	01 7a 52             	add    %edi,0x52(%rdx)
 80b:	00 01                	add    %al,(%rcx)
 80d:	78 10                	js     81f <__GNU_EH_FRAME_HDR+0x5b>
 80f:	01 1b                	add    %ebx,(%rbx)
 811:	0c 07                	or     $0x7,%al
 813:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 819:	00 00                	add    %al,(%rax)
 81b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 81e:	00 00                	add    %al,(%rax)
 820:	b0 fd                	mov    $0xfd,%al
 822:	ff                   	(bad)  
 823:	ff 2b                	ljmp   *(%rbx)
	...
 82d:	00 00                	add    %al,(%rax)
 82f:	00 14 00             	add    %dl,(%rax,%rax,1)
 832:	00 00                	add    %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	01 7a 52             	add    %edi,0x52(%rdx)
 83b:	00 01                	add    %al,(%rcx)
 83d:	78 10                	js     84f <__GNU_EH_FRAME_HDR+0x8b>
 83f:	01 1b                	add    %ebx,(%rbx)
 841:	0c 07                	or     $0x7,%al
 843:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 849:	00 00                	add    %al,(%rax)
 84b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 84e:	00 00                	add    %al,(%rax)
 850:	30 fd                	xor    %bh,%ch
 852:	ff                   	(bad)  
 853:	ff 40 00             	incl   0x0(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	00 0e                	add    %cl,(%rsi)
 85a:	10 46 0e             	adc    %al,0xe(%rsi)
 85d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 860:	0b 77 08             	or     0x8(%rdi),%esi
 863:	80 00 3f             	addb   $0x3f,(%rax)
 866:	1a 3b                	sbb    (%rbx),%bh
 868:	2a 33                	sub    (%rbx),%dh
 86a:	24 22                	and    $0x22,%al
 86c:	00 00                	add    %al,(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	14 00                	adc    $0x0,%al
 872:	00 00                	add    %al,(%rax)
 874:	44 00 00             	add    %r8b,(%rax)
 877:	00 48 fd             	add    %cl,-0x3(%rax)
 87a:	ff                   	(bad)  
 87b:	ff 08                	decl   (%rax)
	...
 885:	00 00                	add    %al,(%rax)
 887:	00 1c 00             	add    %bl,(%rax,%rax,1)
 88a:	00 00                	add    %al,(%rax)
 88c:	5c                   	pop    %rsp
 88d:	00 00                	add    %al,(%rax)
 88f:	00 4a fe             	add    %cl,-0x2(%rdx)
 892:	ff                   	(bad)  
 893:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
 897:	00 00                	add    %al,(%rax)
 899:	41 0e                	rex.B (bad) 
 89b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 8a1:	02 5f 0c             	add    0xc(%rdi),%bl
 8a4:	07                   	(bad)  
 8a5:	08 00                	or     %al,(%rax)
 8a7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 8ab:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 8af:	00 90 fe ff ff 65    	add    %dl,0x65fffffe(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 00                	add    %al,(%rax)
 8b9:	42 0e                	rex.X (bad) 
 8bb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 8c1:	8e 03                	mov    (%rbx),%es
 8c3:	45 0e                	rex.RB (bad) 
 8c5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 8cb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301719 <_end+0xffffffff86100701>
 8d1:	06                   	(bad)  
 8d2:	48 0e                	rex.W (bad) 
 8d4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 8da:	72 0e                	jb     8ea <__GNU_EH_FRAME_HDR+0x126>
 8dc:	38 41 0e             	cmp    %al,0xe(%rcx)
 8df:	30 41 0e             	xor    %al,0xe(%rcx)
 8e2:	28 42 0e             	sub    %al,0xe(%rdx)
 8e5:	20 42 0e             	and    %al,0xe(%rdx)
 8e8:	18 42 0e             	sbb    %al,0xe(%rdx)
 8eb:	10 42 0e             	adc    %al,0xe(%rdx)
 8ee:	08 00                	or     %al,(%rax)
 8f0:	10 00                	adc    %al,(%rax)
 8f2:	00 00                	add    %al,(%rax)
 8f4:	c4                   	(bad)  
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 b8 fe ff ff 02    	add    %bh,0x2fffffe(%rax)
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 00                	add    %al,(%rax)
 901:	00 00                	add    %al,(%rax)
	...

0000000000000904 <__FRAME_END__>:
 904:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200da8 <__frame_dummy_init_array_entry>:
  200da8:	d0 06                	rolb   (%rsi)
  200daa:	00 00                	add    %al,(%rax)
  200dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db0 <__do_global_dtors_aux_fini_array_entry>:
  200db0:	90                   	nop
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200db8 <_DYNAMIC>:
  200db8:	01 00                	add    %eax,(%rax)
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
  200dbe:	00 00                	add    %al,(%rax)
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	0c 00                	or     $0x0,%al
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	60                   	(bad)  
  200dd1:	05 00 00 00 00       	add    $0x0,%eax
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	0d 00 00 00 00       	or     $0x0,%eax
  200ddd:	00 00                	add    %al,(%rax)
  200ddf:	00 b4 07 00 00 00 00 	add    %dh,0x0(%rdi,%rax,1)
  200de6:	00 00                	add    %al,(%rax)
  200de8:	19 00                	sbb    %eax,(%rax)
  200dea:	00 00                	add    %al,(%rax)
  200dec:	00 00                	add    %al,(%rax)
  200dee:	00 00                	add    %al,(%rax)
  200df0:	a8 0d                	test   $0xd,%al
  200df2:	20 00                	and    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	1b 00                	sbb    (%rax),%eax
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	08 00                	or     %al,(%rax)
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	1a 00                	sbb    (%rax),%al
  200e0a:	00 00                	add    %al,(%rax)
  200e0c:	00 00                	add    %al,(%rax)
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	b0 0d                	mov    $0xd,%al
  200e12:	20 00                	and    %al,(%rax)
  200e14:	00 00                	add    %al,(%rax)
  200e16:	00 00                	add    %al,(%rax)
  200e18:	1c 00                	sbb    $0x0,%al
  200e1a:	00 00                	add    %al,(%rax)
  200e1c:	00 00                	add    %al,(%rax)
  200e1e:	00 00                	add    %al,(%rax)
  200e20:	08 00                	or     %al,(%rax)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	f5                   	cmc    
  200e29:	fe                   	(bad)  
  200e2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e2d:	00 00                	add    %al,(%rax)
  200e2f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e3d <_DYNAMIC+0x85>
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 06                	add    %al,(%rsi)
  200e49:	00 00                	add    %al,(%rax)
  200e4b:	00 00                	add    %al,(%rax)
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 0a                	add    %cl,(%rdx)
  200e59:	00 00                	add    %al,(%rax)
  200e5b:	00 00                	add    %al,(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 0b                	add    %cl,(%rbx)
  200e69:	00 00                	add    %al,(%rax)
  200e6b:	00 00                	add    %al,(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 18                	add    %bl,(%rax)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e7d <_DYNAMIC+0xc5>
	...
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 03                	add    %al,(%rbx)
  200e89:	00 00                	add    %al,(%rax)
  200e8b:	00 00                	add    %al,(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 a8 0f 20 00 00    	add    %ch,0x200f(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 02                	add    %al,(%rdx)
  200e99:	00 00                	add    %al,(%rax)
  200e9b:	00 00                	add    %al,(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 48 00             	add    %cl,0x0(%rax)
  200ea2:	00 00                	add    %al,(%rax)
  200ea4:	00 00                	add    %al,(%rax)
  200ea6:	00 00                	add    %al,(%rax)
  200ea8:	14 00                	adc    $0x0,%al
  200eaa:	00 00                	add    %al,(%rax)
  200eac:	00 00                	add    %al,(%rax)
  200eae:	00 00                	add    %al,(%rax)
  200eb0:	07                   	(bad)  
  200eb1:	00 00                	add    %al,(%rax)
  200eb3:	00 00                	add    %al,(%rax)
  200eb5:	00 00                	add    %al,(%rax)
  200eb7:	00 17                	add    %dl,(%rdi)
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 18                	add    %bl,(%rax)
  200ec1:	05 00 00 00 00       	add    $0x0,%eax
  200ec6:	00 00                	add    %al,(%rax)
  200ec8:	07                   	(bad)  
  200ec9:	00 00                	add    %al,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 58 04             	add    %bl,0x4(%rax)
  200ed2:	00 00                	add    %al,(%rax)
  200ed4:	00 00                	add    %al,(%rax)
  200ed6:	00 00                	add    %al,(%rax)
  200ed8:	08 00                	or     %al,(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	c0 00 00             	rolb   $0x0,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 09                	add    %cl,(%rcx)
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 18                	add    %bl,(%rax)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 1e                	add    %bl,(%rsi)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 08                	add    %cl,(%rax)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 fb                	add    %bh,%bl
  200f09:	ff                   	(bad)  
  200f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 01                	add    %al,(%rcx)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	08 00                	or     %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 fe                	add    %bh,%dh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 38                	add    %bh,(%rax)
  200f21:	04 00                	add    $0x0,%al
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 ff                	add    %bh,%bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 01                	add    %al,(%rcx)
  200f31:	00 00                	add    %al,(%rax)
  200f33:	00 00                	add    %al,(%rax)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 f0                	add    %dh,%al
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 20                	add    %ah,(%rax)
  200f41:	04 00                	add    $0x0,%al
  200f43:	00 00                	add    %al,(%rax)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 f9                	add    %bh,%cl
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fa8 <_GLOBAL_OFFSET_TABLE_>:
  200fa8:	b8 0d 20 00 00       	mov    $0x200d,%eax
	...
  200fbd:	00 00                	add    %al,(%rax)
  200fbf:	00 96 05 00 00 00    	add    %dl,0x5(%rsi)
  200fc5:	00 00                	add    %al,(%rax)
  200fc7:	00 a6 05 00 00 00    	add    %ah,0x5(%rsi)
  200fcd:	00 00                	add    %al,(%rax)
  200fcf:	00 b6 05 00 00 00    	add    %dh,0x5(%rsi)
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4e8>
   a:	74 75                	je     81 <_init-0x4df>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x4e8>
  16:	75 6e                	jne    86 <_init-0x4da>
  18:	74 75                	je     8f <_init-0x4d1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    %al,%cs:(%rax)
